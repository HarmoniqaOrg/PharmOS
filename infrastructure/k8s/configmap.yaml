apiVersion: v1
kind: ConfigMap
metadata:
  name: pharmos-config
  namespace: pharmos
  labels:
    app.kubernetes.io/name: pharmos-config
    app.kubernetes.io/part-of: pharmos-platform
data:
  NODE_ENV: "production"
  ENVIRONMENT: "production"
  POSTGRES_DB: "pharmos_db"
  POSTGRES_USER: "pharmos_user"
  MONGODB_DB: "pharmos"
  REDIS_DB: "0"
  ELASTICSEARCH_INDEX: "pharmos"
  PROMETHEUS_PORT: "9090"
  GRAFANA_PORT: "3000"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: pharmos
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: pharmos-platform
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'pharmos-k8s'
        replica: 'pharmos-prometheus'

    rule_files:
      - "alert_rules.yml"

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'pharmos-backend'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - pharmos
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: pharmos-backend

      - job_name: 'pharmos-ml-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - pharmos
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: pharmos-ml-service

      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
        - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics

  alert_rules.yml: |
    groups:
      - name: pharmos_alerts
        rules:
          - alert: ServiceDown
            expr: up == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Service {{ $labels.job }} is down"
              description: "Service {{ $labels.job }} has been down for more than 1 minute."